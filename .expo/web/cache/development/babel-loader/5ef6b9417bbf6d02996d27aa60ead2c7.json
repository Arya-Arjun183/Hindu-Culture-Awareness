{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport MaskedView from \"../MaskedView\";\nimport TouchableItem from \"../TouchableItem\";\nimport useTheme from \"../../../utils/useTheme\";\nexport default function HeaderBackButton(_ref) {\n  var disabled = _ref.disabled,\n      allowFontScaling = _ref.allowFontScaling,\n      backImage = _ref.backImage,\n      label = _ref.label,\n      labelStyle = _ref.labelStyle,\n      _ref$labelVisible = _ref.labelVisible,\n      labelVisible = _ref$labelVisible === void 0 ? Platform.OS === 'ios' : _ref$labelVisible,\n      onLabelLayout = _ref.onLabelLayout,\n      onPress = _ref.onPress,\n      customPressColorAndroid = _ref.pressColorAndroid,\n      screenLayout = _ref.screenLayout,\n      customTintColor = _ref.tintColor,\n      titleLayout = _ref.titleLayout,\n      _ref$truncatedLabel = _ref.truncatedLabel,\n      truncatedLabel = _ref$truncatedLabel === void 0 ? 'Back' : _ref$truncatedLabel,\n      _ref$accessibilityLab = _ref.accessibilityLabel,\n      accessibilityLabel = _ref$accessibilityLab === void 0 ? label && label !== 'Back' ? \"\".concat(label, \", back\") : 'Go back' : _ref$accessibilityLab,\n      style = _ref.style;\n\n  var _useTheme = useTheme(),\n      dark = _useTheme.dark,\n      colors = _useTheme.colors;\n\n  var _React$useState = React.useState(undefined),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      initialLabelWidth = _React$useState2[0],\n      setInitialLabelWidth = _React$useState2[1];\n\n  var tintColor = customTintColor !== undefined ? customTintColor : Platform.select({\n    ios: colors.primary,\n    default: colors.text\n  });\n  var pressColorAndroid = customPressColorAndroid !== undefined ? customPressColorAndroid : dark ? 'rgba(255, 255, 255, .32)' : 'rgba(0, 0, 0, .32)';\n\n  var handleLabelLayout = function handleLabelLayout(e) {\n    onLabelLayout === null || onLabelLayout === void 0 ? void 0 : onLabelLayout(e);\n    setInitialLabelWidth(e.nativeEvent.layout.x + e.nativeEvent.layout.width);\n  };\n\n  var shouldTruncateLabel = function shouldTruncateLabel() {\n    return !label || initialLabelWidth && titleLayout && screenLayout && (screenLayout.width - titleLayout.width) / 2 < initialLabelWidth + 26;\n  };\n\n  var renderBackImage = function renderBackImage() {\n    if (backImage) {\n      return backImage({\n        tintColor: tintColor\n      });\n    } else {\n      return React.createElement(Image, {\n        style: [styles.icon, Boolean(labelVisible) && styles.iconWithLabel, Boolean(tintColor) && {\n          tintColor: tintColor\n        }],\n        source: require(\"../assets/back-icon.png\"),\n        fadeDuration: 0\n      });\n    }\n  };\n\n  var renderLabel = function renderLabel() {\n    var leftLabelText = shouldTruncateLabel() ? truncatedLabel : label;\n\n    if (!labelVisible || leftLabelText === undefined) {\n      return null;\n    }\n\n    var labelElement = React.createElement(View, {\n      style: screenLayout ? [styles.labelWrapper, {\n        minWidth: screenLayout.width / 2 - 27\n      }] : null\n    }, React.createElement(Animated.Text, {\n      accessible: false,\n      onLayout: leftLabelText === label ? handleLabelLayout : undefined,\n      style: [styles.label, tintColor ? {\n        color: tintColor\n      } : null, labelStyle],\n      numberOfLines: 1,\n      allowFontScaling: !!allowFontScaling\n    }, leftLabelText));\n\n    if (backImage || Platform.OS !== 'ios') {\n      return labelElement;\n    }\n\n    return React.createElement(MaskedView, {\n      maskElement: React.createElement(View, {\n        style: styles.iconMaskContainer\n      }, React.createElement(Image, {\n        source: require(\"../assets/back-icon-mask.png\"),\n        style: styles.iconMask\n      }), React.createElement(View, {\n        style: styles.iconMaskFillerRect\n      }))\n    }, labelElement);\n  };\n\n  var handlePress = function handlePress() {\n    return onPress && requestAnimationFrame(onPress);\n  };\n\n  return React.createElement(TouchableItem, {\n    disabled: disabled,\n    accessible: true,\n    accessibilityRole: \"button\",\n    accessibilityComponentType: \"button\",\n    accessibilityLabel: accessibilityLabel,\n    accessibilityTraits: \"button\",\n    testID: \"header-back\",\n    delayPressIn: 0,\n    onPress: disabled ? undefined : handlePress,\n    pressColor: pressColorAndroid,\n    style: [styles.container, disabled && styles.disabled, style],\n    hitSlop: Platform.select({\n      ios: undefined,\n      default: {\n        top: 16,\n        right: 16,\n        bottom: 16,\n        left: 16\n      }\n    }),\n    borderless: true\n  }, React.createElement(React.Fragment, null, renderBackImage(), renderLabel()));\n}\nvar styles = StyleSheet.create({\n  container: _objectSpread({\n    alignItems: 'center',\n    flexDirection: 'row'\n  }, Platform.select({\n    ios: null,\n    default: {\n      marginVertical: 3,\n      marginHorizontal: 11\n    }\n  })),\n  disabled: {\n    opacity: 0.5\n  },\n  label: {\n    fontSize: 17,\n    letterSpacing: 0.35\n  },\n  labelWrapper: {\n    flexDirection: 'row',\n    alignItems: 'flex-start'\n  },\n  icon: Platform.select({\n    ios: {\n      height: 21,\n      width: 13,\n      marginLeft: 8,\n      marginRight: 22,\n      marginVertical: 12,\n      resizeMode: 'contain',\n      transform: [{\n        scaleX: I18nManager.isRTL ? -1 : 1\n      }]\n    },\n    default: {\n      height: 24,\n      width: 24,\n      margin: 3,\n      resizeMode: 'contain',\n      transform: [{\n        scaleX: I18nManager.isRTL ? -1 : 1\n      }]\n    }\n  }),\n  iconWithLabel: Platform.OS === 'ios' ? {\n    marginRight: 6\n  } : {},\n  iconMaskContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  iconMaskFillerRect: {\n    flex: 1,\n    backgroundColor: '#000'\n  },\n  iconMask: {\n    height: 21,\n    width: 13,\n    marginLeft: -14.5,\n    marginVertical: 12,\n    alignSelf: 'center',\n    resizeMode: 'contain',\n    transform: [{\n      scaleX: I18nManager.isRTL ? -1 : 1\n    }]\n  }\n});","map":{"version":3,"sources":["HeaderBackButton.tsx"],"names":["labelVisible","Platform","pressColorAndroid","tintColor","truncatedLabel","accessibilityLabel","label","style","colors","useTheme","React","customTintColor","ios","default","text","customPressColorAndroid","dark","handleLabelLayout","e","onLabelLayout","setInitialLabelWidth","shouldTruncateLabel","initialLabelWidth","screenLayout","titleLayout","renderBackImage","backImage","styles","Boolean","require","renderLabel","leftLabelText","labelElement","minWidth","color","allowFontScaling","iconMaskContainer","iconMask","iconMaskFillerRect","handlePress","onPress","requestAnimationFrame","disabled","top","right","bottom","left","container","alignItems","flexDirection","marginVertical","marginHorizontal","opacity","fontSize","letterSpacing","labelWrapper","icon","height","width","marginLeft","marginRight","resizeMode","transform","scaleX","I18nManager","margin","iconWithLabel","flex","justifyContent","backgroundColor","alignSelf"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  I18nManager,\n  Image,\n  View,\n  Platform,\n  StyleSheet,\n  LayoutChangeEvent,\n} from 'react-native';\nimport MaskedView from '../MaskedView';\nimport TouchableItem from '../TouchableItem';\nimport useTheme from '../../../utils/useTheme';\nimport type { StackHeaderLeftButtonProps } from '../../types';\n\ntype Props = StackHeaderLeftButtonProps;\n\nexport default function HeaderBackButton({\n  disabled,\n  allowFontScaling,\n  backImage,\n  label,\n  labelStyle,\n  labelVisible = Platform.OS === 'ios',\n  onLabelLayout,\n  onPress,\n  pressColorAndroid: customPressColorAndroid,\n  screenLayout,\n  tintColor: customTintColor,\n  titleLayout,\n  truncatedLabel = 'Back',\n  accessibilityLabel = label && label !== 'Back' ? `${label}, back` : 'Go back',\n  style,\n}: Props) {\n  const { dark, colors } = useTheme();\n\n  const [initialLabelWidth, setInitialLabelWidth] = React.useState<\n    undefined | number\n  >(undefined);\n\n  const tintColor =\n    customTintColor !== undefined\n      ? customTintColor\n      : Platform.select({\n          ios: colors.primary,\n          default: colors.text,\n        });\n\n  const pressColorAndroid =\n    customPressColorAndroid !== undefined\n      ? customPressColorAndroid\n      : dark\n      ? 'rgba(255, 255, 255, .32)'\n      : 'rgba(0, 0, 0, .32)';\n\n  const handleLabelLayout = (e: LayoutChangeEvent) => {\n    onLabelLayout?.(e);\n\n    setInitialLabelWidth(e.nativeEvent.layout.x + e.nativeEvent.layout.width);\n  };\n\n  const shouldTruncateLabel = () => {\n    return (\n      !label ||\n      (initialLabelWidth &&\n        titleLayout &&\n        screenLayout &&\n        (screenLayout.width - titleLayout.width) / 2 < initialLabelWidth + 26)\n    );\n  };\n\n  const renderBackImage = () => {\n    if (backImage) {\n      return backImage({ tintColor });\n    } else {\n      return (\n        <Image\n          style={[\n            styles.icon,\n            Boolean(labelVisible) && styles.iconWithLabel,\n            Boolean(tintColor) && { tintColor },\n          ]}\n          source={require('../assets/back-icon.png')}\n          fadeDuration={0}\n        />\n      );\n    }\n  };\n\n  const renderLabel = () => {\n    const leftLabelText = shouldTruncateLabel() ? truncatedLabel : label;\n\n    if (!labelVisible || leftLabelText === undefined) {\n      return null;\n    }\n\n    const labelElement = (\n      <View\n        style={\n          screenLayout\n            ? // We make the button extend till the middle of the screen\n              // Otherwise it appears to cut off when translating\n              [styles.labelWrapper, { minWidth: screenLayout.width / 2 - 27 }]\n            : null\n        }\n      >\n        <Animated.Text\n          accessible={false}\n          onLayout={\n            // This measurement is used to determine if we should truncate the label when it doesn't fit\n            // Only measure it when label is not truncated because we want the measurement of full label\n            leftLabelText === label ? handleLabelLayout : undefined\n          }\n          style={[\n            styles.label,\n            tintColor ? { color: tintColor } : null,\n            labelStyle,\n          ]}\n          numberOfLines={1}\n          allowFontScaling={!!allowFontScaling}\n        >\n          {leftLabelText}\n        </Animated.Text>\n      </View>\n    );\n\n    if (backImage || Platform.OS !== 'ios') {\n      // When a custom backimage is specified, we can't mask the label\n      // Otherwise there might be weird effect due to our mask not being the same as the image\n      return labelElement;\n    }\n\n    return (\n      <MaskedView\n        maskElement={\n          <View style={styles.iconMaskContainer}>\n            <Image\n              source={require('../assets/back-icon-mask.png')}\n              style={styles.iconMask}\n            />\n            <View style={styles.iconMaskFillerRect} />\n          </View>\n        }\n      >\n        {labelElement}\n      </MaskedView>\n    );\n  };\n\n  const handlePress = () => onPress && requestAnimationFrame(onPress);\n\n  return (\n    <TouchableItem\n      disabled={disabled}\n      accessible\n      accessibilityRole=\"button\"\n      accessibilityComponentType=\"button\"\n      accessibilityLabel={accessibilityLabel}\n      accessibilityTraits=\"button\"\n      testID=\"header-back\"\n      delayPressIn={0}\n      onPress={disabled ? undefined : handlePress}\n      pressColor={pressColorAndroid}\n      style={[styles.container, disabled && styles.disabled, style]}\n      hitSlop={Platform.select({\n        ios: undefined,\n        default: { top: 16, right: 16, bottom: 16, left: 16 },\n      })}\n      borderless\n    >\n      <React.Fragment>\n        {renderBackImage()}\n        {renderLabel()}\n      </React.Fragment>\n    </TouchableItem>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    ...Platform.select({\n      ios: null,\n      default: {\n        marginVertical: 3,\n        marginHorizontal: 11,\n      },\n    }),\n  },\n  disabled: {\n    opacity: 0.5,\n  },\n  label: {\n    fontSize: 17,\n    // Title and back label are a bit different width due to title being bold\n    // Adjusting the letterSpacing makes them coincide better\n    letterSpacing: 0.35,\n  },\n  labelWrapper: {\n    // These styles will make sure that the label doesn't fill the available space\n    // Otherwise it messes with the measurement of the label\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n  },\n  icon: Platform.select({\n    ios: {\n      height: 21,\n      width: 13,\n      marginLeft: 8,\n      marginRight: 22,\n      marginVertical: 12,\n      resizeMode: 'contain',\n      transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n    },\n    default: {\n      height: 24,\n      width: 24,\n      margin: 3,\n      resizeMode: 'contain',\n      transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n    },\n  }),\n  iconWithLabel:\n    Platform.OS === 'ios'\n      ? {\n          marginRight: 6,\n        }\n      : {},\n  iconMaskContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  iconMaskFillerRect: {\n    flex: 1,\n    backgroundColor: '#000',\n  },\n  iconMask: {\n    height: 21,\n    width: 13,\n    marginLeft: -14.5,\n    marginVertical: 12,\n    alignSelf: 'center',\n    resizeMode: 'contain',\n    transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n  },\n});\n"]},"metadata":{},"sourceType":"module"}