{"ast":null,"code":"import { isValidElementType } from 'react-is';\nimport invariant from \"../utils/invariant\";\n\nfunction validateRouteConfigMap(routeConfigs) {\n  var routeNames = Object.keys(routeConfigs);\n  invariant(routeNames.length > 0, 'Please specify at least one route when configuring a navigator.');\n  routeNames.forEach(function (routeName) {\n    var routeConfig = routeConfigs[routeName];\n    var screenComponent = getScreenComponent(routeConfig);\n\n    if (!screenComponent || !isValidElementType(screenComponent) && !routeConfig.getScreen) {\n      throw new Error(\"The component for route '\".concat(routeName, \"' must be a React component. For example:\\n\\nimport MyScreen from './MyScreen';\\n...\\n\").concat(routeName, \": MyScreen,\\n}\\n\\nYou can also use a navigator:\\n\\nimport MyNavigator from './MyNavigator';\\n...\\n\").concat(routeName, \": MyNavigator,\\n}\"));\n    }\n\n    if (routeConfig.screen && routeConfig.getScreen) {\n      throw new Error(\"Route '\".concat(routeName, \"' should declare a screen or a getScreen, not both.\"));\n    }\n  });\n}\n\nfunction getScreenComponent(routeConfig) {\n  if (!routeConfig) {\n    return null;\n  }\n\n  return routeConfig.screen ? routeConfig.screen : routeConfig;\n}\n\nexport default validateRouteConfigMap;","map":{"version":3,"sources":["validateRouteConfigMap.js"],"names":["routeNames","Object","invariant","routeName","routeConfig","routeConfigs","screenComponent","getScreenComponent","isValidElementType"],"mappings":"AAAA,SAAA,kBAAA,QAAA,UAAA;AAEA,OAAA,SAAA;;AAMA,SAAA,sBAAA,CAAA,YAAA,EAA8C;EAC5C,IAAMA,UAAU,GAAGC,MAAM,CAANA,IAAAA,CAAnB,YAAmBA,CAAnB;EACAC,SAAS,CACPF,UAAU,CAAVA,MAAAA,GADO,CAAA,EAATE,iEAAS,CAATA;EAKAF,UAAU,CAAVA,OAAAA,CAAoBG,UAAAA,SAAD,EAAe;IAChC,IAAMC,WAAW,GAAGC,YAAY,CAAhC,SAAgC,CAAhC;IACA,IAAMC,eAAe,GAAGC,kBAAkB,CAA1C,WAA0C,CAA1C;;IAEA,IACE,CAAA,eAAA,IACC,CAACC,kBAAkB,CAAnB,eAAmB,CAAnB,IAAwC,CAACJ,WAAW,CAFvD,SAAA,EAGE;MACA,MAAM,IAAA,KAAA,CAAA,4BAAA,MAAA,CAAA,SAAA,EAAA,wFAAA,EAAA,MAAA,CAAA,SAAA,EAAA,oGAAA,EAAA,MAAA,CAAA,SAAA,EAAN,mBAAM,CAAA,CAAN;IAaD;;IAED,IAAIA,WAAW,CAAXA,MAAAA,IAAsBA,WAAW,CAArC,SAAA,EAAiD;MAC/C,MAAM,IAAA,KAAA,CAAA,UAAA,MAAA,CAAA,SAAA,EAAN,qDAAM,CAAA,CAAN;IAGD;EA3BHJ,CAAAA;AA6BD;;AAED,SAAA,kBAAA,CAAA,WAAA,EAAyC;EACvC,IAAI,CAAJ,WAAA,EAAkB;IAChB,OAAA,IAAA;EACD;;EAED,OAAOI,WAAW,CAAXA,MAAAA,GAAqBA,WAAW,CAAhCA,MAAAA,GAAP,WAAA;AACD;;AAED,eAAA,sBAAA","sourcesContent":["import { isValidElementType } from 'react-is';\n\nimport invariant from '../utils/invariant';\n\n/**\n * Make sure the config passed e.g. to StackRouter, TabRouter has\n * the correct format, and throw a clear error if it doesn't.\n */\nfunction validateRouteConfigMap(routeConfigs) {\n  const routeNames = Object.keys(routeConfigs);\n  invariant(\n    routeNames.length > 0,\n    'Please specify at least one route when configuring a navigator.'\n  );\n\n  routeNames.forEach((routeName) => {\n    const routeConfig = routeConfigs[routeName];\n    const screenComponent = getScreenComponent(routeConfig);\n\n    if (\n      !screenComponent ||\n      (!isValidElementType(screenComponent) && !routeConfig.getScreen)\n    ) {\n      throw new Error(`The component for route '${routeName}' must be a React component. For example:\n\nimport MyScreen from './MyScreen';\n...\n${routeName}: MyScreen,\n}\n\nYou can also use a navigator:\n\nimport MyNavigator from './MyNavigator';\n...\n${routeName}: MyNavigator,\n}`);\n    }\n\n    if (routeConfig.screen && routeConfig.getScreen) {\n      throw new Error(\n        `Route '${routeName}' should declare a screen or a getScreen, not both.`\n      );\n    }\n  });\n}\n\nfunction getScreenComponent(routeConfig) {\n  if (!routeConfig) {\n    return null;\n  }\n\n  return routeConfig.screen ? routeConfig.screen : routeConfig;\n}\n\nexport default validateRouteConfigMap;\n"]},"metadata":{},"sourceType":"module"}